---
import { Image } from 'astro:assets';
import { getCollection } from 'astro:content';
import Layout from '../../layouts/Layout.astro';
import FormattedDate from '../../components/FormattedDate.astro';
import FeaturedPosts from '../../components/FeaturedPosts.astro';
import { SITE_TITLE } from '../../consts';

const posts = (await getCollection('blog')).sort(
	(a, b) => new Date(b.data.pubDate).getTime() - new Date(a.data.pubDate).getTime()
);

// Group posts by featured status
const featuredPosts = posts.filter(post => post.data.featured);
const regularPosts = posts.filter(post => !post.data.featured);
---

<Layout title={`Posts - ${SITE_TITLE}`} description="Technical blog posts about autonomous systems, embedded engineering, and space technology.">
	<div class="max-w-6xl mx-auto px-4 sm:px-6 lg:px-8 py-12">
		<header class="mb-12">
			<h1 class="text-4xl font-bold mb-4 text-black">Posts</h1>
			<p class="text-xl text-gray-700">
				Technical insights on autonomous systems, embedded engineering, satellite communications, and modern aerospace applications.
			</p>
		</header>

		<!-- Featured Posts -->
		<FeaturedPosts posts={featuredPosts} />

		<!-- All Posts -->
		<section>
			<h2 class="text-2xl font-bold mb-8 text-black">
				{featuredPosts.length > 0 ? 'All Posts' : 'Latest Posts'}
			</h2>
			<div class="space-y-8">
				{posts.map((post) => (
					<article class="border-b border-gray-200 pb-8">
						<div class="flex flex-col md:flex-row gap-6">
							{post.data.heroImage && (
								<div class="md:w-1/3">
									<a href={`/posts/${post.id}`}>
										<Image 
											src={post.data.heroImage} 
											alt={post.data.title}
											width={300}
											height={200}
											class="w-full h-48 md:h-32 object-cover rounded-lg border border-gray-200 hover:border-gray-300 transition-colors"
										/>
									</a>
								</div>
							)}
							<div class={post.data.heroImage ? 'md:w-2/3' : 'w-full'}>
								<div class="mb-2">
									<h3 class="text-2xl font-bold mb-2">
										<a href={`/posts/${post.id}`} class="text-black hover:text-gray-700 no-underline">
											{post.data.title}
										</a>
									</h3>
									<div class="flex items-center gap-3 text-sm text-gray-500">
										<FormattedDate date={post.data.pubDate} />
										{post.data.featured && (
											<span class="px-2 py-1 bg-black text-white text-xs rounded">
												Featured
											</span>
										)}
									</div>
								</div>
								<p class="text-gray-700 mb-4 leading-relaxed">
									{post.data.description}
								</p>
								{post.data.tags && (
									<div class="flex flex-wrap gap-2">
										{post.data.tags.slice(0, 5).map((tag) => (
											<a 
												href={`/posts/tag/${tag}`}
												class="px-2 py-1 bg-gray-100 text-gray-600 text-xs rounded hover:bg-gray-200 transition-colors"
											>
												{tag}
											</a>
										))}
									</div>
								)}
							</div>
						</div>
					</article>
				))}
			</div>
		</section>

		{posts.length === 0 && (
			<div class="text-center py-12">
				<p class="text-gray-500 text-lg">No blog posts found.</p>
			</div>
		)}
	</div>
</Layout>