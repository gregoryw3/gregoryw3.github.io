---
import { Image } from 'astro:assets';
import { getCollection } from 'astro:content';
import Layout from '../../../layouts/Layout.astro';
import FormattedDate from '../../../components/FormattedDate.astro';
import { SITE_TITLE } from '../../../consts';

export async function getStaticPaths() {
	const posts = await getCollection('blog');
	const allTags = [...new Set(posts.flatMap(post => post.data.tags || []))];
	
	return allTags.map(tag => ({
		params: { tag },
		props: { tag, posts: posts.filter(post => post.data.tags?.includes(tag)) }
	}));
}

const { tag, posts } = Astro.props;
const sortedPosts = posts.sort((a, b) => 
	new Date(b.data.pubDate).getTime() - new Date(a.data.pubDate).getTime()
);
---

<Layout title={`Posts tagged "${tag}" - ${SITE_TITLE}`} description={`All blog posts tagged with ${tag}.`}>
	<div class="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-12">
		<header class="mb-12">
			<nav class="mb-4">
				<a href="/posts" class="text-gray-600 hover:text-black text-sm">‚Üê Back to Posts</a>
			</nav>
			<h1 class="text-4xl font-bold mb-4 text-black">Posts tagged "{tag}"</h1>
			<p class="text-xl text-gray-700">
				{sortedPosts.length} {sortedPosts.length === 1 ? 'post' : 'posts'} found
			</p>
		</header>

		{sortedPosts.length > 0 ? (
			<div class="space-y-8">
				{sortedPosts.map((post) => (
					<article class="border-b border-gray-200 pb-8">
						<div class="flex flex-col md:flex-row gap-6">
							{post.data.heroImage && (
								<div class="md:w-1/3">
									<a href={`/posts/${post.id}`}>
										<Image 
											src={post.data.heroImage} 
											alt={post.data.title}
											width={300}
											height={200}
											class="w-full h-48 md:h-32 object-cover rounded-lg border border-gray-200 hover:border-gray-300 transition-colors"
										/>
									</a>
								</div>
							)}
							<div class={post.data.heroImage ? 'md:w-2/3' : 'w-full'}>
								<div class="flex flex-col md:flex-row md:items-center md:justify-between mb-2">
									<h3 class="text-2xl font-bold">
										<a href={`/posts/${post.id}`} class="text-black hover:text-gray-700 no-underline">
											{post.data.title}
										</a>
									</h3>
									<div class="flex items-center gap-3 text-sm text-gray-500">
										<FormattedDate date={post.data.pubDate} />
										{post.data.featured && (
											<span class="px-2 py-1 bg-black text-white text-xs rounded">
												Featured
											</span>
										)}
									</div>
								</div>
								<p class="text-gray-700 mb-4 leading-relaxed">
									{post.data.description}
								</p>
								{post.data.tags && (
									<div class="flex flex-wrap gap-2">
										{post.data.tags.slice(0, 5).map((tagName) => (
											<a 
												href={`/posts/tag/${tagName}`}
												class="px-2 py-1 bg-gray-100 text-gray-600 text-xs rounded hover:bg-gray-200 transition-colors"
											>
												{tagName}
											</a>
										))}
									</div>
								)}
							</div>
						</div>
					</article>
				))}
			</div>
		) : (
			<div class="text-center py-12">
				<p class="text-gray-500 text-lg">No posts found for this tag.</p>
			</div>
		)}
	</div>
</Layout>
